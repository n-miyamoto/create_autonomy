<launch>
  <arg name="robot_id"  default="$(optenv ID 1)"      doc="Unique identifier of the robot [1-Inf.)"/>
  <arg name="ns"        value="create$(arg robot_id)" doc="Namespace of the robot. By default: create1"/>
  <arg name="tf_prefix" value="$(arg ns)_tf"          doc="Tf prefix"/>

  <arg name="laser" default="$(optenv LASER rplidar)" doc="Laser for mapping the environment"/>

  <arg name="rgbd_odometry"     default="false"/>
  <arg name="rtabmapviz"        default="false"/>
  <arg name="localization"      default="false"/>
  <arg     if="$(arg localization)" name="args"  value=""/>
  <arg unless="$(arg localization)" name="args"  value="--delete_db_on_start"/>

  <arg name="rgb_topic"         value="$(arg laser)/rgb/image_rect_color"/>
  <arg name="depth_topic"       value="$(arg laser)/depth_registered/image_raw"/>
  <arg name="camera_info_topic" value="$(arg laser)/rgb/camera_info"/>

  <!-- Can be increased from 5 to 10 Hz to avoid some TF warnings -->
  <arg name="wait_for_transform" value="0.1"/>

  <!-- Mapping -->
  <!-- <group ns="rtabmap"> -->

    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg args)">
      <rosparam file="$(find ca_slam)/config/rtabmap.yaml"/>
      <param name="frame_id" type="string" value="$(arg tf_prefix)/base_footprint"/>
      <param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>
      <remap from="move_base" to="/move_base"/>

      <!-- inputs -->
      <remap from="scan"            to="$(arg laser)/scan"/>
      <remap from="rgb/image"       to="$(arg rgb_topic)"/>
      <remap from="depth/image"     to="$(arg depth_topic)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>

      <!-- Fix odom covariance as in simulation the covariance in /odom topic is high (0.1 for linear and 0.05 for angular) -->
      <param unless="$(arg rgbd_odometry)" name="odom_frame_id"            value="$(arg tf_prefix)/odom"/>
      <!-- <param unless="$(arg rgbd_odometry)" name="odom_tf_linear_variance"  value="0.001"/>
      <param unless="$(arg rgbd_odometry)" name="odom_tf_angular_variance" value="0.001"/> -->

  	  <!-- output -->
  	  <remap from="grid_map" to="/map"/>

      <!-- localization mode -->
      <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
      <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/>
    </node>

    <!-- Odometry : ONLY for testing without the actual robot! /odom TF should not be already published. -->
    <node if="$(arg rgbd_odometry)" pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
      <param name="frame_id"                    type="string" value="$(arg tf_prefix)/base_footprint"/>
      <param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>
      <param name="Reg/Force3DoF"               type="string" value="true"/>
      <param name="Vis/InlierDistance"          type="string" value="0.05"/>

      <remap from="rgb/image"       to="$(arg rgb_topic)"/>
      <remap from="depth/image"     to="$(arg depth_topic)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
    </node>

    <!-- visualization with rtabmapviz -->
    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
  	  <param name="subscribe_depth"             type="bool" value="true"/>
      <param name="subscribe_scan"              type="bool" value="true"/>
      <param name="frame_id"                    type="string" value="$(arg tf_prefix)/base_footprint"/>
      <param name="wait_for_transform_duration" type="double" value="0.2"/>

      <remap from="rgb/image"       to="$(arg rgb_topic)"/>
      <remap from="depth/image"     to="$(arg depth_topic)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
      <remap from="scan"            to="$(arg laser)/scan"/>
    </node>

  <!-- </group> -->
</launch>
